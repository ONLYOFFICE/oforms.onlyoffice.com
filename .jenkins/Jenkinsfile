if ("${BRANCH_NAME}" == 'test_deploy') {
	DESTSITE = 'avs4you.teamlab.info\\blog'
	DESTPOOL = 'avs4you.teamlab.info'
	DESTHOST = '35.174.218.204'
	}

if ("${BRANCH_NAME}" == 'production_deploy') {
	DESTSITE = 'www.avs4you.com\\blog'
	DESTPOOL = 'www.avs4you.com'	
	DESTHOST = '34.199.206.219'
	}

pipeline {
 agent { label 'master' }
	triggers {
		githubPush()
	}
    options {
		disableConcurrentBuilds()
		buildDiscarder (logRotator(numToKeepStr: '3', artifactNumToKeepStr: '3'))
    }
	stages {
        stage('deploy') {
			when { 
				anyOf { branch 'test_deploy'; branch 'production_deploy' }
			}
			environment {
				DESTSITE = "${DESTSITE}"
				DESTPOOL = "${DESTPOOL}"
				DESTHOST = "${DESTHOST}"
			}
			steps {
				withCredentials([
					usernamePassword(credentialsId: 'deploymentuser_pass', usernameVariable: 'deploymentuser', passwordVariable: 'deploymentpass'),
					usernamePassword(credentialsId: 'avs4you_testblog_db_user', usernameVariable: 'testdbuser', passwordVariable: 'testdbpass'),
					usernamePassword(credentialsId: 'avs4you_blog_db_user', usernameVariable: 'dbuser', passwordVariable: 'dbpass')
					])
				{
				powershell '''
					$ErrorActionPreference='Stop'
					
					if ( "$Env:BRANCH_NAME" -eq "test_deploy" ) {
						$valfile = ".jenkins\\value-test.txt"
						$dbu = "$Env:testdbuser"
						$dbp = "$Env:testdbpass"
					}
						
					if ( "$Env:BRANCH_NAME" -eq "production_deploy" ) {
						$valfile = ".jenkins\\value-prod.txt"
						$dbu = "$Env:dbuser"
						$dbp = "$Env:dbpass"
					}
						
					$pathconf = "wp-config.php"
					
					# preparation value files
					(get-content $valfile) | %{$_ -replace "userdb", "$dbu"} | set-content $valfile
					(get-content $valfile) | %{$_ -replace "passdb", "$dbp"} | set-content $valfile
					
					# preparation wp-config.php
					$a = Get-Content -Path "$valfile" 
					$b = Get-Content -Path "$pathconf" 

					$number = 101

					foreach ( $line in $a) {
						$b = $b.replace( "val_$number",$line ) 
						$number ++
					}

					Set-Content -Path "$pathconf" -Value $b
					
					# preparation sync.bat
					(get-content .jenkins\\sync.bat) | %{$_ -replace "%poolname%", "$Env:DESTPOOL"} | set-content .jenkins\\sync.bat
					
				'''
				bat '''
					echo " == Deploy == "
					%msdeployv2% -verb:sync -source:iisapp="%WORKSPACE%" -dest:iisapp="%DESTSITE%",computerName="%DESTHOST%",username=%deploymentuser%,password=%deploymentpass% -preSync:runCommand="%WORKSPACE%\\.jenkins\\sync.bat",waitInterval=120000 -postSync:runCommand="%WORKSPACE%\\.jenkins\\sync.bat",waitInterval=120000 -skip:objectName=dirPath,absolutePath="\\.git|\\.jenkins|uploads"  
				'''
				}
			}
		}
	}
}
